{
  "stats": {
    "suites": 1,
    "tests": 75,
    "passes": 74,
    "pending": 1,
    "failures": 0,
    "start": "2023-11-07T20:01:51.266Z",
    "end": "2023-11-07T20:02:56.408Z",
    "duration": 63893,
    "testsRegistered": 75,
    "passPercent": 98.66666666666667,
    "pendingPercent": 1.3333333333333333,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b0b40a62-fa34-415a-88e3-5a01c6870cc2",
      "title": "",
      "fullFile": "cypress/integration/page.spec.js",
      "file": "cypress/integration/page.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cfc7b4d6-4b3d-4cb2-a381-fb01146ec007",
          "title": "",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fba2b687-ec25-450e-a3dd-6769e2d69cf8",
              "title": "Page with no todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should send 1 todos request",
                  "fullTitle": " Page with no todos should send 1 todos request",
                  "timedOut": null,
                  "duration": 3103,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: []\n})).as('loadCallback');\npage.mockLoad(spy).as('loadRequest');\npage.visit();\ncy.wait('@loadRequest');\ncy.wait(1000);\ncy.get('@loadCallback').should('have.callCount', 1);",
                  "err": {},
                  "uuid": "8c6ef8b2-f0b1-4041-a7b0-004408bed0fe",
                  "parentUUID": "fba2b687-ec25-450e-a3dd-6769e2d69cf8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "2a75ef44-1138-4516-a295-b2d81c0966ef",
                  "title": "",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have NewTodoField",
                      "fullTitle": " Page with no todos  should have NewTodoField",
                      "timedOut": null,
                      "duration": 495,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('exist');",
                      "err": {},
                      "uuid": "523cd4c8-8173-4484-8c72-744992b6c9ee",
                      "parentUUID": "2a75ef44-1138-4516-a295-b2d81c0966ef",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Todos",
                      "fullTitle": " Page with no todos  should not have Todos",
                      "timedOut": null,
                      "duration": 436,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "70f5b876-930e-4fe6-bbc6-548a0342d56b",
                      "parentUUID": "2a75ef44-1138-4516-a295-b2d81c0966ef",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Footer",
                      "fullTitle": " Page with no todos  should not have Footer",
                      "timedOut": null,
                      "duration": 434,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "bb42f645-b713-4fc0-abf6-8a73399053c0",
                      "parentUUID": "2a75ef44-1138-4516-a295-b2d81c0966ef",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show error message",
                      "fullTitle": " Page with no todos  should not show error message",
                      "timedOut": null,
                      "duration": 397,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertHidden();",
                      "err": {},
                      "uuid": "574e58e4-3755-449e-b201-aac9ed8c6095",
                      "parentUUID": "2a75ef44-1138-4516-a295-b2d81c0966ef",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "523cd4c8-8173-4484-8c72-744992b6c9ee",
                    "70f5b876-930e-4fe6-bbc6-548a0342d56b",
                    "bb42f645-b713-4fc0-abf6-8a73399053c0",
                    "574e58e4-3755-449e-b201-aac9ed8c6095"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1762,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "21b10d96-2ed2-40b9-b8df-75735eafbaca",
                  "title": "on loading error",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show error",
                      "fullTitle": " Page with no todos on loading error should show error",
                      "timedOut": null,
                      "duration": 750,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();",
                      "err": {},
                      "uuid": "96aeddf2-0d19-425e-ad17-174069adbc34",
                      "parentUUID": "21b10d96-2ed2-40b9-b8df-75735eafbaca",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show correct message",
                      "fullTitle": " Page with no todos on loading error should show correct message",
                      "timedOut": null,
                      "duration": 471,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertText('Unable to load todos');",
                      "err": {},
                      "uuid": "8db63190-5740-4274-ab96-a0e7580b4daa",
                      "parentUUID": "21b10d96-2ed2-40b9-b8df-75735eafbaca",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error after 3 seconds",
                      "fullTitle": " Page with no todos on loading error should hide error after 3 seconds",
                      "timedOut": null,
                      "duration": 3378,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "eaa1ebec-b142-4332-8a45-bede9e08513a",
                      "parentUUID": "21b10d96-2ed2-40b9-b8df-75735eafbaca",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error on close button click",
                      "fullTitle": " Page with no todos on loading error should hide error on close button click",
                      "timedOut": null,
                      "duration": 513,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.closeButton().click();\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "6200e61d-3ceb-45f4-ad30-1af0be7cdb83",
                      "parentUUID": "21b10d96-2ed2-40b9-b8df-75735eafbaca",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "96aeddf2-0d19-425e-ad17-174069adbc34",
                    "8db63190-5740-4274-ab96-a0e7580b4daa",
                    "eaa1ebec-b142-4332-8a45-bede9e08513a",
                    "6200e61d-3ceb-45f4-ad30-1af0be7cdb83"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5112,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "8c6ef8b2-f0b1-4041-a7b0-004408bed0fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3103,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
              "title": "Page with mixed todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have NewTodoField",
                  "fullTitle": " Page with mixed todos should have NewTodoField",
                  "timedOut": null,
                  "duration": 466,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('exist');",
                  "err": {},
                  "uuid": "672daf43-788b-4558-996b-9459d275afcd",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have all loaded todos",
                  "fullTitle": " Page with mixed todos should have all loaded todos",
                  "timedOut": null,
                  "duration": 436,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(5);",
                  "err": {},
                  "uuid": "ac311cb3-3345-4985-8681-504487d824de",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have delete buttons for every todo",
                  "fullTitle": " Page with mixed todos should have delete buttons for every todo",
                  "timedOut": null,
                  "duration": 437,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.deleteButton(0).should('exist');",
                  "err": {},
                  "uuid": "a9fde91b-410d-4cf8-b4a0-3999d63a2c9c",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not have loaders",
                  "fullTitle": " Page with mixed todos should not have loaders",
                  "timedOut": null,
                  "duration": 575,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                  "err": {},
                  "uuid": "f76f141a-850d-41f8-8574-11144b884b93",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct todo titles",
                  "fullTitle": " Page with mixed todos should have correct todo titles",
                  "timedOut": null,
                  "duration": 536,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');\ntodos.assertTitle(3, 'TypeScript');\ntodos.assertTitle(4, 'React');",
                  "err": {},
                  "uuid": "15192452-544b-4de4-98f4-0d8824062329",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should higlight all completed todos",
                  "fullTitle": " Page with mixed todos should higlight all completed todos",
                  "timedOut": null,
                  "duration": 546,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);",
                  "err": {},
                  "uuid": "6e6c8d03-db51-4bac-9f24-29f23f777318",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not higlight not completed todos",
                  "fullTitle": " Page with mixed todos should not higlight not completed todos",
                  "timedOut": null,
                  "duration": 609,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotCompleted(3);\ntodos.assertNotCompleted(4);",
                  "err": {},
                  "uuid": "4733a507-83c1-4910-9b9c-6c33ab90478d",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct completed statuses",
                  "fullTitle": " Page with mixed todos should have correct completed statuses",
                  "timedOut": null,
                  "duration": 590,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.statusToggler(0).should('be.checked');\ntodos.statusToggler(1).should('be.checked');\ntodos.statusToggler(2).should('be.checked');\ntodos.statusToggler(3).should('not.be.checked');\ntodos.statusToggler(4).should('not.be.checked');",
                  "err": {},
                  "uuid": "252b9faa-224c-449e-84b5-623cb495e00b",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 738,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "4d5316ef-1bf2-45a4-aa33-0b3caa041975",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have todosCounter with a number of not completed todos",
                  "fullTitle": " Page with mixed todos should have todosCounter with a number of not completed todos",
                  "timedOut": null,
                  "duration": 394,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('have.text', '2 items left');",
                  "err": {},
                  "uuid": "5fc61bcc-5673-489a-8871-df91c0770109",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have clearCompletedButton",
                  "fullTitle": " Page with mixed todos should have clearCompletedButton",
                  "timedOut": null,
                  "duration": 532,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.clearCompletedButton().should('exist');",
                  "err": {},
                  "uuid": "469d0814-5c76-4910-8742-d261e3ba5ade",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 404,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "c97445ed-f699-453c-a201-8e0a0af3bbda",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show error message",
                  "fullTitle": " Page with mixed todos should not show error message",
                  "timedOut": null,
                  "duration": 411,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "errorMessage.assertHidden();",
                  "err": {},
                  "uuid": "277e8eb2-7eb0-43cf-be73-f0f1e7a2004a",
                  "parentUUID": "750189ab-0e43-49c2-879f-00f2c3c2dc58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "672daf43-788b-4558-996b-9459d275afcd",
                "ac311cb3-3345-4985-8681-504487d824de",
                "a9fde91b-410d-4cf8-b4a0-3999d63a2c9c",
                "f76f141a-850d-41f8-8574-11144b884b93",
                "15192452-544b-4de4-98f4-0d8824062329",
                "6e6c8d03-db51-4bac-9f24-29f23f777318",
                "4733a507-83c1-4910-9b9c-6c33ab90478d",
                "252b9faa-224c-449e-84b5-623cb495e00b",
                "4d5316ef-1bf2-45a4-aa33-0b3caa041975",
                "5fc61bcc-5673-489a-8871-df91c0770109",
                "469d0814-5c76-4910-8742-d261e3ba5ade",
                "c97445ed-f699-453c-a201-8e0a0af3bbda",
                "277e8eb2-7eb0-43cf-be73-f0f1e7a2004a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6674,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "61f85d76-fbf9-47f3-9fe5-440368b6b91a",
              "title": "Filtering",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "0789fe8f-977b-493d-b084-27481914c86d",
                  "title": "with mixed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have only filterLinkAll active",
                      "fullTitle": " Filtering with mixed todos should have only filterLinkAll active",
                      "timedOut": null,
                      "duration": 467,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "b4c22949-b8b7-45fc-af39-9cadc0ea29cd",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the active filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the active filter",
                      "timedOut": null,
                      "duration": 537,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\nfilter.assertNotSelected('all');\nfilter.assertSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "c913b07e-a309-42a0-841e-2241217664f2",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only active todos when active filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only active todos when active filter is selected",
                      "timedOut": null,
                      "duration": 548,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\ntodos.assertCount(2);\ntodos.assertTitle(0, 'TypeScript');\ntodos.assertTitle(1, 'React');",
                      "err": {},
                      "uuid": "f787c241-28c5-446c-827f-b33c09fccdef",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when active todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when active todos are shown",
                      "timedOut": null,
                      "duration": 523,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "0b6744e4-7944-4848-a05d-3bf1ec0b6f49",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the completed filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the completed filter",
                      "timedOut": null,
                      "duration": 522,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertNotSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertSelected('completed');",
                      "err": {},
                      "uuid": "0589d1d1-7ce1-4e7e-8154-ccd5a3400544",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only completed todos when completed filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only completed todos when completed filter is selected",
                      "timedOut": null,
                      "duration": 557,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');",
                      "err": {},
                      "uuid": "602ac348-37c1-4da2-93ed-7009797175da",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when completed todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when completed todos are shown",
                      "timedOut": null,
                      "duration": 521,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "3d70091e-70d1-4a82-bcb6-f802f55e9f60",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to reset filter",
                      "fullTitle": " Filtering with mixed todos should allow to reset filter",
                      "timedOut": null,
                      "duration": 675,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.link('all').click();\ntodos.assertCount(5);\nfilter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "a214f516-69ca-4746-a0e3-6007fb63c296",
                      "parentUUID": "0789fe8f-977b-493d-b084-27481914c86d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4c22949-b8b7-45fc-af39-9cadc0ea29cd",
                    "c913b07e-a309-42a0-841e-2241217664f2",
                    "f787c241-28c5-446c-827f-b33c09fccdef",
                    "0b6744e4-7944-4848-a05d-3bf1ec0b6f49",
                    "0589d1d1-7ce1-4e7e-8154-ccd5a3400544",
                    "602ac348-37c1-4da2-93ed-7009797175da",
                    "3d70091e-70d1-4a82-bcb6-f802f55e9f60",
                    "a214f516-69ca-4746-a0e3-6007fb63c296"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4350,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "e8984056-415c-405b-9d99-a79f58de236a",
                  "title": "with active todos only",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos on completed selection",
                      "fullTitle": " Filtering with active todos only should hide todos on completed selection",
                      "timedOut": null,
                      "duration": 535,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(0);",
                      "err": {},
                      "uuid": "d019a266-75bc-4bac-8785-41a9d3c6305b",
                      "parentUUID": "e8984056-415c-405b-9d99-a79f58de236a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer on completed selection",
                      "fullTitle": " Filtering with active todos only should keep footer on completed selection",
                      "timedOut": null,
                      "duration": 496,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertVisible();",
                      "err": {},
                      "uuid": "87a47d03-0701-4650-bb2b-81f93a452fce",
                      "parentUUID": "e8984056-415c-405b-9d99-a79f58de236a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep todos counter on completed selection",
                      "fullTitle": " Filtering with active todos only should keep todos counter on completed selection",
                      "timedOut": null,
                      "duration": 510,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '5 items left');",
                      "err": {},
                      "uuid": "2252dbc4-1325-497b-aade-9f9016ae3faf",
                      "parentUUID": "e8984056-415c-405b-9d99-a79f58de236a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d019a266-75bc-4bac-8785-41a9d3c6305b",
                    "87a47d03-0701-4650-bb2b-81f93a452fce",
                    "2252dbc4-1325-497b-aade-9f9016ae3faf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1541,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fd3b68bf-7807-4765-ab60-ca181dc9b0dd",
              "title": "Adding a todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should focus text field by default",
                  "fullTitle": " Adding a todo should focus text field by default",
                  "timedOut": null,
                  "duration": 418,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('be.focused');",
                  "err": {},
                  "uuid": "66faef21-1717-453d-a24c-79df3e17aed8",
                  "parentUUID": "fd3b68bf-7807-4765-ab60-ca181dc9b0dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "89494de6-18db-4b2c-95eb-67e7bdf6846b",
                  "title": "if title is empty",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title is empty should not send a request",
                      "timedOut": null,
                      "duration": 575,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "9e17192d-620c-4001-9dab-1976f8fff0af",
                      "parentUUID": "89494de6-18db-4b2c-95eb-67e7bdf6846b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title is empty should keep text field focused",
                      "timedOut": null,
                      "duration": 632,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "d92aad49-7125-48f7-8532-25636ebd7e23",
                      "parentUUID": "89494de6-18db-4b2c-95eb-67e7bdf6846b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title is empty should display an error message",
                      "timedOut": null,
                      "duration": 520,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "53253853-5fa3-49f6-86c7-63e5aeb53097",
                      "parentUUID": "89494de6-18db-4b2c-95eb-67e7bdf6846b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title is empty should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3280,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "abd4dfe4-c5a0-4725-a82b-82f965bc4fdf",
                      "parentUUID": "89494de6-18db-4b2c-95eb-67e7bdf6846b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9e17192d-620c-4001-9dab-1976f8fff0af",
                    "d92aad49-7125-48f7-8532-25636ebd7e23",
                    "53253853-5fa3-49f6-86c7-63e5aeb53097",
                    "abd4dfe4-c5a0-4725-a82b-82f965bc4fdf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5007,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "d1736f57-e380-4fcd-9bd8-4e371869d9b7",
                  "title": "if title title has only whitespaces",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title title has only whitespaces should not send a request",
                      "timedOut": null,
                      "duration": 591,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "9d5d23d1-0631-4818-9561-4c5b98514418",
                      "parentUUID": "d1736f57-e380-4fcd-9bd8-4e371869d9b7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title title has only whitespaces should keep text field focused",
                      "timedOut": null,
                      "duration": 577,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "a05df9f4-03c0-4f26-b7af-35da14aa9dd1",
                      "parentUUID": "d1736f57-e380-4fcd-9bd8-4e371869d9b7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title title has only whitespaces should display an error message",
                      "timedOut": null,
                      "duration": 572,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "279e266f-35e0-4ecd-a311-d6fc1db3ff7d",
                      "parentUUID": "d1736f57-e380-4fcd-9bd8-4e371869d9b7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title title has only whitespaces should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3282,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "874235ac-5024-4056-90b2-948fe88ba117",
                      "parentUUID": "d1736f57-e380-4fcd-9bd8-4e371869d9b7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9d5d23d1-0631-4818-9561-4c5b98514418",
                    "a05df9f4-03c0-4f26-b7af-35da14aa9dd1",
                    "279e266f-35e0-4ecd-a311-d6fc1db3ff7d",
                    "874235ac-5024-4056-90b2-948fe88ba117"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5022,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                  "title": "after form submition before response is received",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should send a create request",
                      "fullTitle": " Adding a todo after form submition before response is received should send a create request",
                      "timedOut": null,
                      "duration": 717,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.tick(1000);\ncy.get('@createCallback').should('have.callCount', 1);",
                      "err": {},
                      "uuid": "8fb571e6-d70c-402b-a353-76f34687658e",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should disable the input",
                      "fullTitle": " Adding a todo after form submition before response is received should disable the input",
                      "timedOut": null,
                      "duration": 677,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.disabled');",
                      "err": {},
                      "uuid": "b27b0896-32eb-4f59-bdc8-c7badc569b41",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep entered text",
                      "fullTitle": " Adding a todo after form submition before response is received should keep entered text",
                      "timedOut": null,
                      "duration": 661,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "49369805-5194-4f72-b0fc-e16c6d06b273",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should create and show a temp TodoItem with Loader",
                      "fullTitle": " Adding a todo after form submition before response is received should create and show a temp TodoItem with Loader",
                      "timedOut": null,
                      "duration": 658,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(6);\ntodos.assertLoading(5);",
                      "err": {},
                      "uuid": "e5d05328-8e20-490e-b557-3c9b1f838211",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a temp TodoItem with correct title",
                      "fullTitle": " Adding a todo after form submition before response is received should show a temp TodoItem with correct title",
                      "timedOut": null,
                      "duration": 640,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertTitle(5, 'Test Todo');",
                      "err": {},
                      "uuid": "fce2ee4c-49c8-4354-868c-03697253519c",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a not completed temp TodoItem",
                      "fullTitle": " Adding a todo after form submition before response is received should show a not completed temp TodoItem",
                      "timedOut": null,
                      "duration": 646,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotCompleted(5);",
                      "err": {},
                      "uuid": "3d498ac8-00ba-4db2-92c6-21c2189c98f0",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show loaders for existing todos",
                      "fullTitle": " Adding a todo after form submition before response is received should not show loaders for existing todos",
                      "timedOut": null,
                      "duration": 682,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                      "err": {},
                      "uuid": "027ea9e3-3797-4552-b5bd-6d37b387e69e",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo after form submition before response is received should not update active counter",
                      "timedOut": null,
                      "duration": 618,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "d4c1c62f-b348-4561-826e-a7c62d21ee7f",
                      "parentUUID": "fbfc26a2-91f2-4afd-b6e4-227d15cdc940",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8fb571e6-d70c-402b-a353-76f34687658e",
                    "b27b0896-32eb-4f59-bdc8-c7badc569b41",
                    "49369805-5194-4f72-b0fc-e16c6d06b273",
                    "e5d05328-8e20-490e-b557-3c9b1f838211",
                    "fce2ee4c-49c8-4354-868c-03697253519c",
                    "3d498ac8-00ba-4db2-92c6-21c2189c98f0",
                    "027ea9e3-3797-4552-b5bd-6d37b387e69e",
                    "d4c1c62f-b348-4561-826e-a7c62d21ee7f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5299,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "7b2258fc-d964-4fb5-b8ea-73e5335785d3",
                  "title": "on success response",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should add trimmed title",
                      "fullTitle": " Adding a todo on success response should add trimmed title",
                      "timedOut": null,
                      "duration": 974,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\npage.newTodoField().type('  Other Title    {enter}');\ncy.wait('@createRequest'); // just in case\ncy.wait(100);\ntodos.assertTitle(5, 'Other Title');",
                      "err": {},
                      "uuid": "bd44f2a1-08de-40a2-8ba9-18cc7760a1a8",
                      "parentUUID": "7b2258fc-d964-4fb5-b8ea-73e5335785d3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep current filter",
                      "fullTitle": " Adding a todo on success response should keep current filter",
                      "timedOut": null,
                      "duration": 877,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\nfilter.link('active').click();\npage.newTodoField().type('Test Todo{enter}');\ncy.wait('@createRequest');\nfilter.assertSelected('active');",
                      "err": {},
                      "uuid": "da65b72f-8932-4f6e-bc9f-5bdbcdbdfec6",
                      "parentUUID": "7b2258fc-d964-4fb5-b8ea-73e5335785d3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                      "title": "",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should replace loader with a created todo",
                          "fullTitle": " Adding a todo on success response  should replace loader with a created todo",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "",
                          "err": {},
                          "uuid": "2375cafc-e033-41c8-93f0-672ee0eabd30",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a todo with a correct title",
                          "fullTitle": " Adding a todo on success response  should add a todo with a correct title",
                          "timedOut": null,
                          "duration": 721,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertTitle(5, 'Test Todo');",
                          "err": {},
                          "uuid": "fc1122a5-019c-465b-8fe0-71ee778778ec",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a not completed todo",
                          "fullTitle": " Adding a todo on success response  should add a not completed todo",
                          "timedOut": null,
                          "duration": 771,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertNotCompleted(5);",
                          "err": {},
                          "uuid": "480c95af-98c7-4615-80ba-ae495871ba7c",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should update active counter",
                          "fullTitle": " Adding a todo on success response  should update active counter",
                          "timedOut": null,
                          "duration": 797,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.todosCounter().should('have.text', '3 items left');",
                          "err": {},
                          "uuid": "abfa77b1-4f6b-4d32-88b7-5fe0c3e16cf7",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should enable the text field",
                          "fullTitle": " Adding a todo on success response  should enable the text field",
                          "timedOut": null,
                          "duration": 799,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('not.be.disabled');",
                          "err": {},
                          "uuid": "f0bf0fa5-b530-49b3-9824-564816f89952",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not show error message",
                          "fullTitle": " Adding a todo on success response  should not show error message",
                          "timedOut": null,
                          "duration": 776,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertHidden();",
                          "err": {},
                          "uuid": "35e28585-c95f-4d57-aaf0-17e41ff930ec",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should clear text field",
                          "fullTitle": " Adding a todo on success response  should clear text field",
                          "timedOut": null,
                          "duration": 763,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('have.value', '');",
                          "err": {},
                          "uuid": "527ca10f-7323-4f26-98ec-9350b5d86cb2",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should focus text field",
                          "fullTitle": " Adding a todo on success response  should focus text field",
                          "timedOut": null,
                          "duration": 863,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('be.focused');",
                          "err": {},
                          "uuid": "a9d18817-89fc-4df4-a583-4a86b7e2fc0e",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should allow to add one more todo",
                          "fullTitle": " Adding a todo on success response  should allow to add one more todo",
                          "timedOut": null,
                          "duration": 1336,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('Hello world{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(7); // todos.assertNotLoading(6);\ntodos.assertNotCompleted(6);\ntodos.assertTitle(6, 'Hello world');\npage.todosCounter().should('have.text', '4 items left');",
                          "err": {},
                          "uuid": "544d0694-0187-4651-8be9-35d4821f66f5",
                          "parentUUID": "cfd1e9af-1d69-4fe5-8201-caea55db8add",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fc1122a5-019c-465b-8fe0-71ee778778ec",
                        "480c95af-98c7-4615-80ba-ae495871ba7c",
                        "abfa77b1-4f6b-4d32-88b7-5fe0c3e16cf7",
                        "f0bf0fa5-b530-49b3-9824-564816f89952",
                        "35e28585-c95f-4d57-aaf0-17e41ff930ec",
                        "527ca10f-7323-4f26-98ec-9350b5d86cb2",
                        "a9d18817-89fc-4df4-a583-4a86b7e2fc0e",
                        "544d0694-0187-4651-8be9-35d4821f66f5"
                      ],
                      "failures": [],
                      "pending": [
                        "2375cafc-e033-41c8-93f0-672ee0eabd30"
                      ],
                      "skipped": [],
                      "duration": 6826,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "bd44f2a1-08de-40a2-8ba9-18cc7760a1a8",
                    "da65b72f-8932-4f6e-bc9f-5bdbcdbdfec6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1851,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                  "title": "on request fail",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show an error message",
                      "fullTitle": " Adding a todo on request fail should show an error message",
                      "timedOut": null,
                      "duration": 837,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to add a todo');",
                      "err": {},
                      "uuid": "1dd24d1e-8027-4c10-90fc-f5610dfe6c8f",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message in 3 seconds",
                      "fullTitle": " Adding a todo on request fail should hide an error message in 3 seconds",
                      "timedOut": null,
                      "duration": 3396,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "07367aae-a2ce-4c11-969d-91fdaffa8bf5",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should remove a temp TodoItem on request fail",
                      "fullTitle": " Adding a todo on request fail should remove a temp TodoItem on request fail",
                      "timedOut": null,
                      "duration": 921,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(5);\ntodos.assertTitle(4, 'React');",
                      "err": {},
                      "uuid": "35d925f4-c91d-4c1e-86fe-d9ee7570bc89",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should enable the text field on request fail",
                      "fullTitle": " Adding a todo on request fail should enable the text field on request fail",
                      "timedOut": null,
                      "duration": 924,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('not.be.disabled');",
                      "err": {},
                      "uuid": "b06c8926-4d60-4fd5-aec7-641963b25506",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep the entered text on request fail",
                      "fullTitle": " Adding a todo on request fail should keep the entered text on request fail",
                      "timedOut": null,
                      "duration": 789,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "3a60812f-b610-4e03-929a-557f6b0f3ebc",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field",
                      "fullTitle": " Adding a todo on request fail should focus text field",
                      "timedOut": null,
                      "duration": 733,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "c56e2986-7c7a-48f8-af17-759deeee96bc",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo on request fail should not update active counter",
                      "timedOut": null,
                      "duration": 789,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "9c44001e-50e8-44e4-9850-cfcf87903d7e",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should immediately hide an error message on new request",
                      "fullTitle": " Adding a todo on request fail should immediately hide an error message on new request",
                      "timedOut": null,
                      "duration": 3427,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().type(`{enter}`);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "4b56f884-5aa4-4c47-b075-1b92fd966348",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show an error message again on a next fail",
                      "fullTitle": " Adding a todo on request fail should show an error message again on a next fail",
                      "timedOut": null,
                      "duration": 833,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\npage.newTodoField().type(`{enter}`);\ncy.wait('@createRequest2');\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "9720ba07-d520-4f85-91c1-dd2431dc459a",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep an error message for 3s after the last fail",
                      "fullTitle": " Adding a todo on request fail should keep an error message for 3s after the last fail",
                      "timedOut": null,
                      "duration": 815,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\ncy.clock();\ncy.tick(2000);\npage.newTodoField().type(`{enter}`);\ncy.tick(500);\ncy.wait('@createRequest2');\ncy.tick(2000);\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "06a20705-dfb3-4dc6-8153-0f66ffeceec1",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to add a todo",
                      "fullTitle": " Adding a todo on request fail should allow to add a todo",
                      "timedOut": null,
                      "duration": 1084,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(6); // todos.assertNotLoading(5);\ntodos.assertNotCompleted(5);\ntodos.assertTitle(5, 'Test Todo');\npage.todosCounter().should('have.text', '3 items left');",
                      "err": {},
                      "uuid": "bbb25957-cf5d-4afe-899e-274f1915c8cb",
                      "parentUUID": "da9012ae-7518-4efd-aee9-8e0314cd6b9b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1dd24d1e-8027-4c10-90fc-f5610dfe6c8f",
                    "07367aae-a2ce-4c11-969d-91fdaffa8bf5",
                    "35d925f4-c91d-4c1e-86fe-d9ee7570bc89",
                    "b06c8926-4d60-4fd5-aec7-641963b25506",
                    "3a60812f-b610-4e03-929a-557f6b0f3ebc",
                    "c56e2986-7c7a-48f8-af17-759deeee96bc",
                    "9c44001e-50e8-44e4-9850-cfcf87903d7e",
                    "4b56f884-5aa4-4c47-b075-1b92fd966348",
                    "9720ba07-d520-4f85-91c1-dd2431dc459a",
                    "06a20705-dfb3-4dc6-8153-0f66ffeceec1",
                    "bbb25957-cf5d-4afe-899e-274f1915c8cb"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14548,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "66faef21-1717-453d-a24c-79df3e17aed8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 418,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9a8751d2-99bf-46c1-8189-d172f79331db",
              "title": "Adding a first todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show a new todos",
                  "fullTitle": " Adding a first todo should show a new todos",
                  "timedOut": null,
                  "duration": 890,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(1);\ntodos.assertTitle(0, 'First todo');\ntodos.assertNotCompleted(0);",
                  "err": {},
                  "uuid": "95c50b8b-f558-4802-80e0-d6baaace4e92",
                  "parentUUID": "9a8751d2-99bf-46c1-8189-d172f79331db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show Filter",
                  "fullTitle": " Adding a first todo should show Filter",
                  "timedOut": null,
                  "duration": 747,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "b3547e3e-75d2-4c40-aadc-29259c8db75c",
                  "parentUUID": "9a8751d2-99bf-46c1-8189-d172f79331db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show todosCounter",
                  "fullTitle": " Adding a first todo should show todosCounter",
                  "timedOut": null,
                  "duration": 743,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('have.text', '1 items left');",
                  "err": {},
                  "uuid": "be01cacd-fd84-4084-af75-8f933342ca7a",
                  "parentUUID": "9a8751d2-99bf-46c1-8189-d172f79331db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95c50b8b-f558-4802-80e0-d6baaace4e92",
                "b3547e3e-75d2-4c40-aadc-29259c8db75c",
                "be01cacd-fd84-4084-af75-8f933342ca7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2380,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}