{
  "stats": {
    "suites": 1,
    "tests": 75,
    "passes": 49,
    "pending": 1,
    "failures": 6,
    "start": "2023-11-06T17:04:17.991Z",
    "end": "2023-11-06T17:07:48.813Z",
    "duration": 204590,
    "testsRegistered": 75,
    "passPercent": 65.33333333333333,
    "pendingPercent": 1.3333333333333333,
    "other": 0,
    "hasOther": false,
    "skipped": 19,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "f3c0dfb6-d8f0-4d2a-b718-4eadbe6e2d5b",
      "title": "",
      "fullFile": "cypress/integration/page.spec.js",
      "file": "cypress/integration/page.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e73ce162-86ce-411c-aba4-565956411666",
          "title": "",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5edb5de0-0757-4999-ab1a-85982362ba94",
              "title": "Page with no todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should send 1 todos request",
                  "fullTitle": " Page with no todos should send 1 todos request",
                  "timedOut": null,
                  "duration": 4621,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: []\n})).as('loadCallback');\npage.mockLoad(spy).as('loadRequest');\npage.visit();\ncy.wait('@loadRequest');\ncy.wait(1000);\ncy.get('@loadCallback').should('have.callCount', 1);",
                  "err": {},
                  "uuid": "bd1b6954-7768-4d57-b06c-2fc401aead5e",
                  "parentUUID": "5edb5de0-0757-4999-ab1a-85982362ba94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "2d6fd4b4-4256-44fe-89c1-93bba1420ee1",
                  "title": "",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have NewTodoField",
                      "fullTitle": " Page with no todos  should have NewTodoField",
                      "timedOut": null,
                      "duration": 53296,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('exist');",
                      "err": {},
                      "uuid": "56de2411-8bd1-4694-8255-a89f95fd0b67",
                      "parentUUID": "2d6fd4b4-4256-44fe-89c1-93bba1420ee1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Todos",
                      "fullTitle": " Page with no todos  should not have Todos",
                      "timedOut": null,
                      "duration": 48308,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "dc93a7c8-e343-4173-9408-06084bfeb516",
                      "parentUUID": "2d6fd4b4-4256-44fe-89c1-93bba1420ee1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Footer",
                      "fullTitle": " Page with no todos  should not have Footer",
                      "timedOut": null,
                      "duration": 1082,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "88638298-0c89-4601-b174-5234d88bdbcb",
                      "parentUUID": "2d6fd4b4-4256-44fe-89c1-93bba1420ee1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show error message",
                      "fullTitle": " Page with no todos  should not show error message",
                      "timedOut": null,
                      "duration": 923,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertHidden();",
                      "err": {},
                      "uuid": "8eadb005-88ae-4df3-a197-872839f2641e",
                      "parentUUID": "2d6fd4b4-4256-44fe-89c1-93bba1420ee1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "56de2411-8bd1-4694-8255-a89f95fd0b67",
                    "dc93a7c8-e343-4173-9408-06084bfeb516",
                    "88638298-0c89-4601-b174-5234d88bdbcb",
                    "8eadb005-88ae-4df3-a197-872839f2641e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 103609,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "f2f33ce5-388d-4ab6-92f9-4d70123df97c",
                  "title": "on loading error",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show error",
                      "fullTitle": " Page with no todos on loading error should show error",
                      "timedOut": null,
                      "duration": 1071,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();",
                      "err": {},
                      "uuid": "b8ddd1ae-cecb-499a-918e-d251f78869eb",
                      "parentUUID": "f2f33ce5-388d-4ab6-92f9-4d70123df97c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show correct message",
                      "fullTitle": " Page with no todos on loading error should show correct message",
                      "timedOut": null,
                      "duration": 961,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertText('Unable to load todos');",
                      "err": {},
                      "uuid": "99bd7986-da92-4224-b328-1cec5617e62d",
                      "parentUUID": "f2f33ce5-388d-4ab6-92f9-4d70123df97c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error after 3 seconds",
                      "fullTitle": " Page with no todos on loading error should hide error after 3 seconds",
                      "timedOut": null,
                      "duration": 3746,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "576e309c-bde5-4338-a5f2-4d69c5cf7591",
                      "parentUUID": "f2f33ce5-388d-4ab6-92f9-4d70123df97c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error on close button click",
                      "fullTitle": " Page with no todos on loading error should hide error on close button click",
                      "timedOut": null,
                      "duration": 992,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.closeButton().click();\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "1a73e483-f20d-44b9-a22b-c7e0cf2b3042",
                      "parentUUID": "f2f33ce5-388d-4ab6-92f9-4d70123df97c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b8ddd1ae-cecb-499a-918e-d251f78869eb",
                    "99bd7986-da92-4224-b328-1cec5617e62d",
                    "576e309c-bde5-4338-a5f2-4d69c5cf7591",
                    "1a73e483-f20d-44b9-a22b-c7e0cf2b3042"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6770,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "bd1b6954-7768-4d57-b06c-2fc401aead5e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4621,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2fb79942-f850-4d10-923d-afaf55672b75",
              "title": "Page with mixed todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have NewTodoField",
                  "fullTitle": " Page with mixed todos should have NewTodoField",
                  "timedOut": null,
                  "duration": 955,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('exist');",
                  "err": {},
                  "uuid": "6333a5a7-c7ae-45f0-9ec2-0e67f5487d8e",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have all loaded todos",
                  "fullTitle": " Page with mixed todos should have all loaded todos",
                  "timedOut": null,
                  "duration": 1038,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(5);",
                  "err": {},
                  "uuid": "321f796e-c596-4963-ad6e-538b751617f3",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have delete buttons for every todo",
                  "fullTitle": " Page with mixed todos should have delete buttons for every todo",
                  "timedOut": null,
                  "duration": 955,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.deleteButton(0).should('exist');",
                  "err": {},
                  "uuid": "c6e61447-7689-4893-b5b4-739be729fb02",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not have loaders",
                  "fullTitle": " Page with mixed todos should not have loaders",
                  "timedOut": null,
                  "duration": 1331,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                  "err": {},
                  "uuid": "58873fec-65a3-49d3-9de9-3ed1bc119e17",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct todo titles",
                  "fullTitle": " Page with mixed todos should have correct todo titles",
                  "timedOut": null,
                  "duration": 1151,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');\ntodos.assertTitle(3, 'TypeScript');\ntodos.assertTitle(4, 'React');",
                  "err": {},
                  "uuid": "071a0d79-bdce-4c53-a5e3-a48d6b923df8",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should higlight all completed todos",
                  "fullTitle": " Page with mixed todos should higlight all completed todos",
                  "timedOut": null,
                  "duration": 1169,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);",
                  "err": {},
                  "uuid": "c8bcacca-db8d-4a17-a7e9-62fc402f5de7",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not higlight not completed todos",
                  "fullTitle": " Page with mixed todos should not higlight not completed todos",
                  "timedOut": null,
                  "duration": 952,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotCompleted(3);\ntodos.assertNotCompleted(4);",
                  "err": {},
                  "uuid": "9464c5b7-d5fa-4036-b5c6-b4439c328872",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct completed statuses",
                  "fullTitle": " Page with mixed todos should have correct completed statuses",
                  "timedOut": null,
                  "duration": 1051,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.statusToggler(0).should('be.checked');\ntodos.statusToggler(1).should('be.checked');\ntodos.statusToggler(2).should('be.checked');\ntodos.statusToggler(3).should('not.be.checked');\ntodos.statusToggler(4).should('not.be.checked');",
                  "err": {},
                  "uuid": "f6362cdd-1424-4ab8-9b0c-908c74db98df",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 920,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "5d93d28e-167d-4e71-843e-f16a117d0cdf",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have todosCounter with a number of not completed todos",
                  "fullTitle": " Page with mixed todos should have todosCounter with a number of not completed todos",
                  "timedOut": null,
                  "duration": 969,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('have.text', '2 items left');",
                  "err": {},
                  "uuid": "6a0f61ae-bcd3-4254-8c5f-064d1049e4f8",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have clearCompletedButton",
                  "fullTitle": " Page with mixed todos should have clearCompletedButton",
                  "timedOut": null,
                  "duration": 880,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.clearCompletedButton().should('exist');",
                  "err": {},
                  "uuid": "1cfc9082-e3da-4f59-acc8-fa27cb184abf",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 939,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "46c924ad-202f-4a55-a58a-276f2172aece",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show error message",
                  "fullTitle": " Page with mixed todos should not show error message",
                  "timedOut": null,
                  "duration": 887,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "errorMessage.assertHidden();",
                  "err": {},
                  "uuid": "1ff4a655-6de7-47f8-b41f-225f3371c207",
                  "parentUUID": "2fb79942-f850-4d10-923d-afaf55672b75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6333a5a7-c7ae-45f0-9ec2-0e67f5487d8e",
                "321f796e-c596-4963-ad6e-538b751617f3",
                "c6e61447-7689-4893-b5b4-739be729fb02",
                "58873fec-65a3-49d3-9de9-3ed1bc119e17",
                "071a0d79-bdce-4c53-a5e3-a48d6b923df8",
                "c8bcacca-db8d-4a17-a7e9-62fc402f5de7",
                "9464c5b7-d5fa-4036-b5c6-b4439c328872",
                "f6362cdd-1424-4ab8-9b0c-908c74db98df",
                "5d93d28e-167d-4e71-843e-f16a117d0cdf",
                "6a0f61ae-bcd3-4254-8c5f-064d1049e4f8",
                "1cfc9082-e3da-4f59-acc8-fa27cb184abf",
                "46c924ad-202f-4a55-a58a-276f2172aece",
                "1ff4a655-6de7-47f8-b41f-225f3371c207"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13197,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f5942f55-bb9e-42bc-9a3b-23a09632a86a",
              "title": "Filtering",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                  "title": "with mixed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have only filterLinkAll active",
                      "fullTitle": " Filtering with mixed todos should have only filterLinkAll active",
                      "timedOut": null,
                      "duration": 961,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "349ea23d-ff34-417c-af97-ae722069fb31",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the active filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the active filter",
                      "timedOut": null,
                      "duration": 1213,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\nfilter.assertNotSelected('all');\nfilter.assertSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "027838e2-f300-436d-ab04-d2b415ae8317",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only active todos when active filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only active todos when active filter is selected",
                      "timedOut": null,
                      "duration": 1141,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\ntodos.assertCount(2);\ntodos.assertTitle(0, 'TypeScript');\ntodos.assertTitle(1, 'React');",
                      "err": {},
                      "uuid": "aceb31d1-6d62-4189-a594-d2deb5891a65",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when active todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when active todos are shown",
                      "timedOut": null,
                      "duration": 1179,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "4d99f9a2-4bae-41f1-9a95-17e7f2269c72",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the completed filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the completed filter",
                      "timedOut": null,
                      "duration": 1101,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertNotSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertSelected('completed');",
                      "err": {},
                      "uuid": "4eb10e87-ee9e-440f-86fe-82d06b1c898a",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only completed todos when completed filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only completed todos when completed filter is selected",
                      "timedOut": null,
                      "duration": 1224,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');",
                      "err": {},
                      "uuid": "cfc43773-5c75-4a4d-aa16-44bda9e3097d",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when completed todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when completed todos are shown",
                      "timedOut": null,
                      "duration": 990,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "4f119525-3b67-4e26-86d9-e1e71f72e22c",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to reset filter",
                      "fullTitle": " Filtering with mixed todos should allow to reset filter",
                      "timedOut": null,
                      "duration": 1239,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.link('all').click();\ntodos.assertCount(5);\nfilter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "87036c25-1cb8-4cd4-9163-678e5a0c5ea8",
                      "parentUUID": "f04497ee-9a70-4639-8f76-b82b8ea78644",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "349ea23d-ff34-417c-af97-ae722069fb31",
                    "027838e2-f300-436d-ab04-d2b415ae8317",
                    "aceb31d1-6d62-4189-a594-d2deb5891a65",
                    "4d99f9a2-4bae-41f1-9a95-17e7f2269c72",
                    "4eb10e87-ee9e-440f-86fe-82d06b1c898a",
                    "cfc43773-5c75-4a4d-aa16-44bda9e3097d",
                    "4f119525-3b67-4e26-86d9-e1e71f72e22c",
                    "87036c25-1cb8-4cd4-9163-678e5a0c5ea8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 9048,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "7a439ce1-8aed-4d82-9a34-8c96cff576d3",
                  "title": "with active todos only",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos on completed selection",
                      "fullTitle": " Filtering with active todos only should hide todos on completed selection",
                      "timedOut": null,
                      "duration": 1040,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(0);",
                      "err": {},
                      "uuid": "841782ea-3456-4877-a531-957ac54d5598",
                      "parentUUID": "7a439ce1-8aed-4d82-9a34-8c96cff576d3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer on completed selection",
                      "fullTitle": " Filtering with active todos only should keep footer on completed selection",
                      "timedOut": null,
                      "duration": 929,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertVisible();",
                      "err": {},
                      "uuid": "a8b0fee7-2cca-4b23-afae-ed0e48f8e4fd",
                      "parentUUID": "7a439ce1-8aed-4d82-9a34-8c96cff576d3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep todos counter on completed selection",
                      "fullTitle": " Filtering with active todos only should keep todos counter on completed selection",
                      "timedOut": null,
                      "duration": 1030,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '5 items left');",
                      "err": {},
                      "uuid": "74322e0d-74ed-4be3-8e3f-f639d23594a0",
                      "parentUUID": "7a439ce1-8aed-4d82-9a34-8c96cff576d3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "841782ea-3456-4877-a531-957ac54d5598",
                    "a8b0fee7-2cca-4b23-afae-ed0e48f8e4fd",
                    "74322e0d-74ed-4be3-8e3f-f639d23594a0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2999,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "47effd54-54b1-48b5-9c8a-507aa9e8e15c",
              "title": "Adding a todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should focus text field by default",
                  "fullTitle": " Adding a todo should focus text field by default",
                  "timedOut": null,
                  "duration": 814,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('be.focused');",
                  "err": {},
                  "uuid": "6bed3e48-823e-4ce9-b268-ae758ad5aa57",
                  "parentUUID": "47effd54-54b1-48b5-9c8a-507aa9e8e15c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "604936a8-337b-4dd4-8a2b-78f97293ee67",
                  "title": "if title is empty",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title is empty should not send a request",
                      "timedOut": null,
                      "duration": 1061,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "ee33ad4c-21c7-46c6-b6cd-e0712b6f4973",
                      "parentUUID": "604936a8-337b-4dd4-8a2b-78f97293ee67",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title is empty should keep text field focused",
                      "timedOut": null,
                      "duration": 1084,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "0e712958-f00b-4556-b5a4-30f3afe4aa29",
                      "parentUUID": "604936a8-337b-4dd4-8a2b-78f97293ee67",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title is empty should display an error message",
                      "timedOut": null,
                      "duration": 1079,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "f1960100-bf1b-4b66-8add-fa9b3ce45af7",
                      "parentUUID": "604936a8-337b-4dd4-8a2b-78f97293ee67",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title is empty should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3703,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "a50af99a-b962-40fe-8813-11f809a1777d",
                      "parentUUID": "604936a8-337b-4dd4-8a2b-78f97293ee67",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee33ad4c-21c7-46c6-b6cd-e0712b6f4973",
                    "0e712958-f00b-4556-b5a4-30f3afe4aa29",
                    "f1960100-bf1b-4b66-8add-fa9b3ce45af7",
                    "a50af99a-b962-40fe-8813-11f809a1777d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6927,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "bf1d16ff-1ed7-4b3c-9152-0e57a13125c1",
                  "title": "if title title has only whitespaces",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title title has only whitespaces should not send a request",
                      "timedOut": null,
                      "duration": 1240,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "9521ce8d-ee08-46e5-89f6-c61c9bb96c5d",
                      "parentUUID": "bf1d16ff-1ed7-4b3c-9152-0e57a13125c1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title title has only whitespaces should keep text field focused",
                      "timedOut": null,
                      "duration": 1105,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "cee6f0e9-d3ad-43e3-bd9d-3b8e1837400b",
                      "parentUUID": "bf1d16ff-1ed7-4b3c-9152-0e57a13125c1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title title has only whitespaces should display an error message",
                      "timedOut": null,
                      "duration": 1244,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "46a76b8d-afdf-436e-9787-2837be9aeb86",
                      "parentUUID": "bf1d16ff-1ed7-4b3c-9152-0e57a13125c1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title title has only whitespaces should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3708,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "f7814ac4-adb6-4f6e-8319-3d9edc6861cf",
                      "parentUUID": "bf1d16ff-1ed7-4b3c-9152-0e57a13125c1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9521ce8d-ee08-46e5-89f6-c61c9bb96c5d",
                    "cee6f0e9-d3ad-43e3-bd9d-3b8e1837400b",
                    "46a76b8d-afdf-436e-9787-2837be9aeb86",
                    "f7814ac4-adb6-4f6e-8319-3d9edc6861cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7297,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                  "title": "after form submition before response is received",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should send a create request",
                      "fullTitle": " Adding a todo after form submition before response is received should send a create request",
                      "timedOut": null,
                      "duration": 5975,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "cy.tick(1000);\ncy.get('@createCallback').should('have.callCount', 1);",
                      "err": {
                        "message": "AssertionError: Timed out retrying after 4000ms: expected createCallback to have been called exactly \"once\", but it was never called",
                        "estack": "AssertionError: Timed out retrying after 4000ms: expected createCallback to have been called exactly \"once\", but it was never called\n    at Context.eval (http://localhost:3001/__cypress/tests?p=cypress\\integration\\page.spec.js:538:35)",
                        "diff": null
                      },
                      "uuid": "4892a138-177d-48d1-894d-d60e125c5288",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should disable the input",
                      "fullTitle": " Adding a todo after form submition before response is received should disable the input",
                      "timedOut": null,
                      "duration": 1875,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.disabled');",
                      "err": {},
                      "uuid": "72d563af-2e69-4a7e-ae68-3a4709456277",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep entered text",
                      "fullTitle": " Adding a todo after form submition before response is received should keep entered text",
                      "timedOut": null,
                      "duration": 1505,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "abe24135-8290-44a5-a30a-e9fa6d00462a",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should create and show a temp TodoItem with Loader",
                      "fullTitle": " Adding a todo after form submition before response is received should create and show a temp TodoItem with Loader",
                      "timedOut": null,
                      "duration": 1415,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(6);\ntodos.assertLoading(5);",
                      "err": {},
                      "uuid": "1e5b0e28-5102-4e8c-8d49-c0b19c9de8d9",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a temp TodoItem with correct title",
                      "fullTitle": " Adding a todo after form submition before response is received should show a temp TodoItem with correct title",
                      "timedOut": null,
                      "duration": 1432,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertTitle(5, 'Test Todo');",
                      "err": {},
                      "uuid": "135f555f-e038-4873-944e-efcf7e0a6c1a",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a not completed temp TodoItem",
                      "fullTitle": " Adding a todo after form submition before response is received should show a not completed temp TodoItem",
                      "timedOut": null,
                      "duration": 1220,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotCompleted(5);",
                      "err": {},
                      "uuid": "7d09999e-f83b-41e4-8c93-9bcb51739b5e",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show loaders for existing todos",
                      "fullTitle": " Adding a todo after form submition before response is received should not show loaders for existing todos",
                      "timedOut": null,
                      "duration": 1507,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                      "err": {},
                      "uuid": "b412b577-f1c3-4356-b4c2-193682846331",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo after form submition before response is received should not update active counter",
                      "timedOut": null,
                      "duration": 1272,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "ef66333b-dbea-48dc-bff6-f0af9340f817",
                      "parentUUID": "0ab525f9-3ec4-47fd-a5ce-34e47e898880",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "72d563af-2e69-4a7e-ae68-3a4709456277",
                    "abe24135-8290-44a5-a30a-e9fa6d00462a",
                    "1e5b0e28-5102-4e8c-8d49-c0b19c9de8d9",
                    "135f555f-e038-4873-944e-efcf7e0a6c1a",
                    "7d09999e-f83b-41e4-8c93-9bcb51739b5e",
                    "b412b577-f1c3-4356-b4c2-193682846331",
                    "ef66333b-dbea-48dc-bff6-f0af9340f817"
                  ],
                  "failures": [
                    "4892a138-177d-48d1-894d-d60e125c5288"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 16201,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "de6a81d6-f592-4eff-9782-ea2658717c0f",
                  "title": "on success response",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should add trimmed title",
                      "fullTitle": " Adding a todo on success response should add trimmed title",
                      "timedOut": null,
                      "duration": 7019,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\npage.newTodoField().type('  Other Title    {enter}');\ncy.wait('@createRequest'); // just in case\ncy.wait(100);\ntodos.assertTitle(5, 'Other Title');",
                      "err": {
                        "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                        "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3001/__cypress/runner/cypress_runner.js:176361:18)\n    at Object.errByPath (http://localhost:3001/__cypress/runner/cypress_runner.js:176430:10)\n    at checkForXhr (http://localhost:3001/__cypress/runner/cypress_runner.js:162559:92)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:162582:28\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:3001/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (http://localhost:3001/__cypress/runner/cypress_runner.js:168785:63)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:168282:14\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (http://localhost:3001/__cypress/runner/cypress_runner.js:11083:18)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:12697:46\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3001/__cypress/tests?p=cypress\\integration\\page.spec.js:615:12)",
                        "diff": null
                      },
                      "uuid": "ee136278-5e19-4963-9f4e-f61b7f8ea41e",
                      "parentUUID": "de6a81d6-f592-4eff-9782-ea2658717c0f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep current filter",
                      "fullTitle": " Adding a todo on success response should keep current filter",
                      "timedOut": null,
                      "duration": 7426,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\nfilter.link('active').click();\npage.newTodoField().type('Test Todo{enter}');\ncy.wait('@createRequest');\nfilter.assertSelected('active');",
                      "err": {
                        "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                        "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3001/__cypress/runner/cypress_runner.js:176361:18)\n    at Object.errByPath (http://localhost:3001/__cypress/runner/cypress_runner.js:176430:10)\n    at checkForXhr (http://localhost:3001/__cypress/runner/cypress_runner.js:162559:92)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:162582:28\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:3001/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (http://localhost:3001/__cypress/runner/cypress_runner.js:168785:63)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:168282:14\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (http://localhost:3001/__cypress/runner/cypress_runner.js:11083:18)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:12697:46\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3001/__cypress/tests?p=cypress\\integration\\page.spec.js:624:12)",
                        "diff": null
                      },
                      "uuid": "33ce0a14-87b7-40e5-b342-7515d9a6db0f",
                      "parentUUID": "de6a81d6-f592-4eff-9782-ea2658717c0f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                      "title": "",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should replace loader with a created todo",
                          "fullTitle": " Adding a todo on success response  should replace loader with a created todo",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "",
                          "err": {},
                          "uuid": "62aa097e-64f7-4758-80c1-4a558464214c",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a todo with a correct title",
                          "fullTitle": " Adding a todo on success response  should add a todo with a correct title",
                          "timedOut": null,
                          "duration": 6072,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertTitle(5, 'Test Todo');",
                          "err": {
                            "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.",
                            "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.\n    at cypressErr (http://localhost:3001/__cypress/runner/cypress_runner.js:176361:18)\n    at Object.errByPath (http://localhost:3001/__cypress/runner/cypress_runner.js:176430:10)\n    at checkForXhr (http://localhost:3001/__cypress/runner/cypress_runner.js:162559:92)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:162582:28\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:3001/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (http://localhost:3001/__cypress/runner/cypress_runner.js:168785:63)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:168282:14\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (http://localhost:3001/__cypress/runner/cypress_runner.js:11083:18)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:12697:46\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3001/__cypress/tests?p=cypress\\integration\\page.spec.js:572:14)",
                            "diff": null
                          },
                          "uuid": "7b1c3165-a700-4f83-b585-43b4a7519cf9",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a not completed todo",
                          "fullTitle": " Adding a todo on success response  should add a not completed todo",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertNotCompleted(5);",
                          "err": {},
                          "uuid": "892f71ee-2494-4764-ab16-3c6b42083d3b",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        },
                        {
                          "title": "should update active counter",
                          "fullTitle": " Adding a todo on success response  should update active counter",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.todosCounter().should('have.text', '3 items left');",
                          "err": {},
                          "uuid": "deffa864-9508-41b4-94a9-3733fd71d634",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        },
                        {
                          "title": "should enable the text field",
                          "fullTitle": " Adding a todo on success response  should enable the text field",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('not.be.disabled');",
                          "err": {},
                          "uuid": "39859c34-9b88-4adb-83f4-021d77b4f104",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        },
                        {
                          "title": "should not show error message",
                          "fullTitle": " Adding a todo on success response  should not show error message",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertHidden();",
                          "err": {},
                          "uuid": "da4c418e-e902-495c-b15d-8f1e0d74b05d",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        },
                        {
                          "title": "should clear text field",
                          "fullTitle": " Adding a todo on success response  should clear text field",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('have.value', '');",
                          "err": {},
                          "uuid": "9430d5cf-b1d3-4283-bafc-1e3c659181c0",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        },
                        {
                          "title": "should focus text field",
                          "fullTitle": " Adding a todo on success response  should focus text field",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('be.focused');",
                          "err": {},
                          "uuid": "c00aac11-5ad1-4c10-8904-24501abbd7f3",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        },
                        {
                          "title": "should allow to add one more todo",
                          "fullTitle": " Adding a todo on success response  should allow to add one more todo",
                          "timedOut": null,
                          "duration": 0,
                          "state": "skipped",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('Hello world{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(7); // todos.assertNotLoading(6);\ntodos.assertNotCompleted(6);\ntodos.assertTitle(6, 'Hello world');\npage.todosCounter().should('have.text', '4 items left');",
                          "err": {},
                          "uuid": "b500d79b-4396-4ab0-a97b-59d3536b91ea",
                          "parentUUID": "9b1d47dd-331b-4d6a-a77b-39401a99a816",
                          "isHook": false,
                          "skipped": true
                        }
                      ],
                      "suites": [],
                      "passes": [],
                      "failures": [
                        "7b1c3165-a700-4f83-b585-43b4a7519cf9"
                      ],
                      "pending": [
                        "62aa097e-64f7-4758-80c1-4a558464214c"
                      ],
                      "skipped": [
                        "892f71ee-2494-4764-ab16-3c6b42083d3b",
                        "deffa864-9508-41b4-94a9-3733fd71d634",
                        "39859c34-9b88-4adb-83f4-021d77b4f104",
                        "da4c418e-e902-495c-b15d-8f1e0d74b05d",
                        "9430d5cf-b1d3-4283-bafc-1e3c659181c0",
                        "c00aac11-5ad1-4c10-8904-24501abbd7f3",
                        "b500d79b-4396-4ab0-a97b-59d3536b91ea"
                      ],
                      "duration": 6072,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [
                    "ee136278-5e19-4963-9f4e-f61b7f8ea41e",
                    "33ce0a14-87b7-40e5-b342-7515d9a6db0f"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 14445,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "c746021d-6c3e-442f-8cfa-8227083786ea",
                  "title": "on request fail",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show an error message",
                      "fullTitle": " Adding a todo on request fail should show an error message",
                      "timedOut": null,
                      "duration": 5940,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to add a todo');",
                      "err": {
                        "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `on request fail`",
                        "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `on request fail`\n    at cypressErr (http://localhost:3001/__cypress/runner/cypress_runner.js:176361:18)\n    at Object.errByPath (http://localhost:3001/__cypress/runner/cypress_runner.js:176430:10)\n    at checkForXhr (http://localhost:3001/__cypress/runner/cypress_runner.js:162559:92)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:162582:28\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:3001/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (http://localhost:3001/__cypress/runner/cypress_runner.js:168785:63)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:168282:14\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (http://localhost:3001/__cypress/runner/cypress_runner.js:11083:18)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:12697:46\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3001/__cypress/tests?p=cypress\\integration\\page.spec.js:637:12)",
                        "diff": null
                      },
                      "uuid": "417de687-b402-4f11-92b3-d13f3dbf97b4",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message in 3 seconds",
                      "fullTitle": " Adding a todo on request fail should hide an error message in 3 seconds",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "8f78c8ef-62ce-469c-bb55-a2bb17bb5b73",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should remove a temp TodoItem on request fail",
                      "fullTitle": " Adding a todo on request fail should remove a temp TodoItem on request fail",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(5);\ntodos.assertTitle(4, 'React');",
                      "err": {},
                      "uuid": "8eed3681-e04a-4d4a-ab15-df8081c0cb44",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should enable the text field on request fail",
                      "fullTitle": " Adding a todo on request fail should enable the text field on request fail",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('not.be.disabled');",
                      "err": {},
                      "uuid": "71feb779-371b-462d-b82a-d69d0cf993a9",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should keep the entered text on request fail",
                      "fullTitle": " Adding a todo on request fail should keep the entered text on request fail",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "48ac55c1-8269-49a3-9f5b-ede7c1cf3f39",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should focus text field",
                      "fullTitle": " Adding a todo on request fail should focus text field",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "172dc921-0c8a-4ad9-be57-ad95d0d90a96",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo on request fail should not update active counter",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "5492b64e-87e6-46b5-b31f-91e6120594d6",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should immediately hide an error message on new request",
                      "fullTitle": " Adding a todo on request fail should immediately hide an error message on new request",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().type(`{enter}`);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "2b60a167-84fd-4c6a-b205-61bdcdeca212",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should show an error message again on a next fail",
                      "fullTitle": " Adding a todo on request fail should show an error message again on a next fail",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\npage.newTodoField().type(`{enter}`);\ncy.wait('@createRequest2');\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "456e56ce-10cc-41aa-8724-c14b111df0c1",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should keep an error message for 3s after the last fail",
                      "fullTitle": " Adding a todo on request fail should keep an error message for 3s after the last fail",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\ncy.clock();\ncy.tick(2000);\npage.newTodoField().type(`{enter}`);\ncy.tick(500);\ncy.wait('@createRequest2');\ncy.tick(2000);\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "3e67fdd5-88cc-4499-b460-aea3f1209a23",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should allow to add a todo",
                      "fullTitle": " Adding a todo on request fail should allow to add a todo",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(6); // todos.assertNotLoading(5);\ntodos.assertNotCompleted(5);\ntodos.assertTitle(5, 'Test Todo');\npage.todosCounter().should('have.text', '3 items left');",
                      "err": {},
                      "uuid": "97d2f934-7c1a-47f5-bbcc-c436d6a37988",
                      "parentUUID": "c746021d-6c3e-442f-8cfa-8227083786ea",
                      "isHook": false,
                      "skipped": true
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [
                    "417de687-b402-4f11-92b3-d13f3dbf97b4"
                  ],
                  "pending": [],
                  "skipped": [
                    "8f78c8ef-62ce-469c-bb55-a2bb17bb5b73",
                    "8eed3681-e04a-4d4a-ab15-df8081c0cb44",
                    "71feb779-371b-462d-b82a-d69d0cf993a9",
                    "48ac55c1-8269-49a3-9f5b-ede7c1cf3f39",
                    "172dc921-0c8a-4ad9-be57-ad95d0d90a96",
                    "5492b64e-87e6-46b5-b31f-91e6120594d6",
                    "2b60a167-84fd-4c6a-b205-61bdcdeca212",
                    "456e56ce-10cc-41aa-8724-c14b111df0c1",
                    "3e67fdd5-88cc-4499-b460-aea3f1209a23",
                    "97d2f934-7c1a-47f5-bbcc-c436d6a37988"
                  ],
                  "duration": 5940,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "6bed3e48-823e-4ce9-b268-ae758ad5aa57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 814,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "17a7994d-21cb-4364-8024-3c03b7b9cde6",
              "title": "Adding a first todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show a new todos",
                  "fullTitle": " Adding a first todo should show a new todos",
                  "timedOut": null,
                  "duration": 6650,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(1);\ntodos.assertTitle(0, 'First todo');\ntodos.assertNotCompleted(0);",
                  "err": {
                    "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Adding a first todo`",
                    "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `createRequest`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Adding a first todo`\n    at cypressErr (http://localhost:3001/__cypress/runner/cypress_runner.js:176361:18)\n    at Object.errByPath (http://localhost:3001/__cypress/runner/cypress_runner.js:176430:10)\n    at checkForXhr (http://localhost:3001/__cypress/runner/cypress_runner.js:162559:92)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:162582:28\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:3001/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (http://localhost:3001/__cypress/runner/cypress_runner.js:168785:63)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:168282:14\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (http://localhost:3001/__cypress/runner/cypress_runner.js:11083:18)\n    at http://localhost:3001/__cypress/runner/cypress_runner.js:12697:46\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3001/__cypress/tests?p=cypress\\integration\\page.spec.js:718:10)",
                    "diff": null
                  },
                  "uuid": "8fd4415f-8bd2-4686-8abb-d477f4a2fbee",
                  "parentUUID": "17a7994d-21cb-4364-8024-3c03b7b9cde6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show Filter",
                  "fullTitle": " Adding a first todo should show Filter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "bad1e572-efc3-4af3-9f18-705783576ae7",
                  "parentUUID": "17a7994d-21cb-4364-8024-3c03b7b9cde6",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should show todosCounter",
                  "fullTitle": " Adding a first todo should show todosCounter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('have.text', '1 items left');",
                  "err": {},
                  "uuid": "1aa18ebc-4ae5-4b35-b4d7-d77658a7f1fc",
                  "parentUUID": "17a7994d-21cb-4364-8024-3c03b7b9cde6",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "8fd4415f-8bd2-4686-8abb-d477f4a2fbee"
              ],
              "pending": [],
              "skipped": [
                "bad1e572-efc3-4af3-9f18-705783576ae7",
                "1aa18ebc-4ae5-4b35-b4d7-d77658a7f1fc"
              ],
              "duration": 6650,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}