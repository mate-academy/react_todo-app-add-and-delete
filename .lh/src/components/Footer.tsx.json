{
    "sourceFile": "src/components/Footer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1715156926234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715156954521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,12 @@\n   };\n \n   if (!todos.length) {\n     return null;\n+  };\n+\n+  const handleClick = () => {\n+    deleteFinishedTodos();\n   }\n \n   return (\n     <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n"
                },
                {
                    "date": 1715156987555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,9 @@\n         type=\"button\"\n         className=\"todoapp__clear-completed\"\n         data-cy=\"ClearCompletedButton\"\n         disabled={!counter}\n+        onClick={handleClick}\n       >\n         Clear completed\n       </button>\n     </footer>\n"
                },
                {
                    "date": 1715169865555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,10 @@\n import { Filter } from '../types/Filter';\n \n type Props = {\n   todos: Todo[];\n-  filter: Filter;\n-  setFilter: (filter: Filter) => void;\n+  completeFilter: null | boolean;\n+  setCompleteFilter: (newCompleteFilter: null | boolean) => void;\n   deleteFinishedTodos: () => void;\n };\n export const Footer: FC<Props> = ({\n   todos,\n"
                },
                {
                    "date": 1715169967717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,29 +11,15 @@\n   deleteFinishedTodos: () => void;\n };\n export const Footer: FC<Props> = ({\n   todos,\n-  filter,\n-  setFilter,\n+  completeFilter,\n+  setCompleteFilter,\n   deleteFinishedTodos,\n }) => {\n-  const counter = useMemo(\n-    () => todos.filter(todo => !todo.completed).length,\n-    [todos],\n-  );\n-\n-  const handleSetFilter = (newFilter: Filter) => (e: FormEvent) => {\n-    e.preventDefault();\n-    setFilter(newFilter);\n-  };\n-\n-  if (!todos.length) {\n-    return null;\n-  }\n-\n   const handleClick = () => {\n     deleteFinishedTodos();\n-  };\n+  }\n \n   return (\n     <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n       <span className=\"todo-count\" data-cy=\"TodosCounter\">\n"
                }
            ],
            "date": 1715156926234,
            "name": "Commit-0",
            "content": "import { FC, FormEvent, useMemo } from 'react';\nimport React from 'react';\n\nimport { Todo } from '../types/Todo';\nimport { Filter } from '../types/Filter';\n\ntype Props = {\n  todos: Todo[];\n  filter: Filter;\n  setFilter: (filter: Filter) => void;\n  deleteFinishedTodos: () => void;\n};\nexport const Footer: FC<Props> = ({ todos, filter, setFilter, deleteFinishedTodos }) => {\n  const counter = useMemo(\n    () => todos.filter(todo => !todo.completed).length,\n    [todos],\n  );\n\n  const handleSetFilter = (newFilter: Filter) => (e: FormEvent) => {\n    e.preventDefault();\n    setFilter(newFilter);\n  };\n\n  if (!todos.length) {\n    return null;\n  }\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"TodosCounter\">\n        {counter} items left\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          href=\"#/\"\n          className={`filter__link ${filter === 'all' ? 'selected' : ''}`}\n          data-cy=\"FilterLinkAll\"\n          onClick={handleSetFilter('all')}\n        >\n          All\n        </a>\n\n        <a\n          href=\"#/active\"\n          className={`filter__link ${filter === 'active' ? 'selected' : ''}`}\n          data-cy=\"FilterLinkActive\"\n          onClick={handleSetFilter('active')}\n        >\n          Active\n        </a>\n\n        <a\n          href=\"#/completed\"\n          className={`filter__link ${filter === 'completed' ? 'selected' : ''}`}\n          data-cy=\"FilterLinkCompleted\"\n          onClick={handleSetFilter('completed')}\n        >\n          Completed\n        </a>\n      </nav>\n      <button\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        data-cy=\"ClearCompletedButton\"\n        disabled={!counter}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n"
        }
    ]
}